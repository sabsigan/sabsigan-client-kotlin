plugins {
    id 'com.android.application'
    id 'org.jetbrains.kotlin.android'
    id 'com.google.gms.google-services'
    id 'kotlin-kapt'
}

// local.properties 값 불러오기 위함
Properties properties = new Properties()
properties.load(project.rootProject.file('local.properties').newDataInputStream())


kotlin {
    jvmToolchain(18)
}

android {
    namespace 'com.android.sabsigan'
    compileSdk 33

    defaultConfig {
        configurations.all {
            resolutionStrategy {
                force("androidx.emoji2:emoji2-views-helper:1.3.0")
                force("androidx.emoji2:emoji2:1.3.0")
            }
        }
        applicationId "com.android.sabsigan"
        minSdk 23
        targetSdk 33
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"

        buildConfigField "String", "STREAM_KEY", properties['stream_chat_api']
        // 프로젝트 내에서 언제든지 사용이 가능한 변수들이다.
        // 타입 - 키 - 값으로 저장된다.

//        manifestPlaceholders = [STREAM_KEY: stream_chat_api]
        // 매니페스트에서 사용이 가능하다. 구글맵 같은 경우가 이에 해당한다.
        // 키 - 값으로 저장된다.
    }

    buildFeatures {
        // Enables Jetpack Compose for this module
        compose true
        viewBinding true
    }

    dataBinding {
        enabled = true
    }

    composeOptions {
        kotlinCompilerExtensionVersion = "1.4.1"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_18
        targetCompatibility JavaVersion.VERSION_18
    }

    kotlinOptions {
        jvmTarget = JavaVersion.VERSION_18.toString()
    }
}

dependencies {
    implementation 'androidx.core:core-ktx:1.7.0'
    implementation 'androidx.appcompat:appcompat:1.6.1'
    implementation 'com.google.android.material:material:1.9.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.1.4'
    implementation "androidx.fragment:fragment-ktx:1.4.0"
    implementation 'androidx.annotation:annotation:1.6.0'
    implementation 'androidx.lifecycle:lifecycle-livedata-ktx:2.6.2'
    implementation 'androidx.lifecycle:lifecycle-viewmodel-ktx:2.6.2'
    implementation 'androidx.navigation:navigation-fragment-ktx:2.5.3'
    implementation 'androidx.navigation:navigation-ui-ktx:2.5.3'
    implementation "androidx.activity:activity-ktx:1.7.0"
    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.5'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.5.1'

    implementation 'androidx.viewpager2:viewpager2:1.0.0'

    // When using a MDC theme
    implementation "com.google.android.material:compose-theme-adapter:1.1.16"
    implementation "androidx.compose.ui:ui-android:1.5.1"

    // When using a AppCompat theme
    implementation "com.google.accompanist:accompanist-appcompat-theme:0.28.0"

    implementation 'androidx.compose.ui:ui:1.5.1'
    // Tooling support (Previews, etc.)
    implementation 'androidx.compose.ui:ui-tooling:1.5.1'
    // Foundation (Border, Background, Box, Image, Scroll, shapes, animations, etc.)
    implementation 'androidx.compose.foundation:foundation:1.5.1'
    // Material Design
    implementation 'androidx.compose.material:material:1.5.1'
    // Material design icons
    implementation 'androidx.compose.material:material-icons-core:1.5.1'
    implementation 'androidx.compose.material:material-icons-extended:1.5.1'
    // Integration with activities
    implementation 'androidx.activity:activity-compose:1.7.2'
    // Integration with ViewModels
    implementation 'androidx.lifecycle:lifecycle-viewmodel-compose:2.6.2'
    // Integration with observables
    implementation 'androidx.compose.runtime:runtime-livedata:1.5.1'
    implementation 'androidx.compose.runtime:runtime-rxjava2:1.5.1'

    // UI Tests
    androidTestImplementation 'androidx.compose.ui:ui-test-junit4:1.5.1'

    implementation 'androidx.cardview:cardview:1.0.0'
    implementation 'androidx.recyclerview:recyclerview:1.3.1'

    // 인디케이터
    implementation("com.tbuonomo:dotsindicator:5.0")

    // 원형 이미지
    implementation 'de.hdodenhof:circleimageview:3.1.0'

    // stream chat api
    implementation "io.getstream:stream-chat-android-ui-components:6.0.2"
    implementation "io.getstream:stream-chat-android-offline:6.0.2"

    //  이미지 로딩 라이브러리
    implementation 'com.github.bumptech.glide:glide:4.12.0'
    implementation 'android.arch.lifecycle:compiler:1.1.1'
    implementation 'com.github.bumptech.glide:compiler:4.12.0'


    // 파이어베이스
    implementation platform('com.google.firebase:firebase-bom:32.5.0')
    implementation 'com.google.firebase:firebase-analytics'
    implementation("com.google.firebase:firebase-auth-ktx")
    implementation("com.google.firebase:firebase-firestore")
    implementation 'com.google.firebase:firebase-storage-ktx'
    
    // Permission 요청, 관리를 위한 라이브러리
    implementation 'io.github.ParkSangGwon:tedpermission-normal:3.3.0'

    // TedPermission
    implementation 'io.github.ParkSangGwon:tedpermission-normal:3.3.0'
    implementation "io.reactivex.rxjava2:rxandroid:2.1.0"
}
